###########################################################################
#
# Copyright (c) 2013 PDMFC, All Rights Reserved.
#
#
# TUnit tests for functions in the tea.html module.
#
###########################################################################





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-basename-test {

    tunit-test basenameOk {
        tunit-assert-equals "world.tea" [file-basename "hello/world.tea"]
        tunit-assert-equals "world.tea" [file-basename "world.tea"]
    }

    tunit-test-error tooFewArgs {
        file-basename
    }

    tunit-test-error tooManyArgs {
        file-basename "1" "2"
    }

    tunit-test-error invalidArgType {
        file-basename $null
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-dirname-test {

    tunit-test dirnameOk {
        tunit-assert-equals "hello" [file-dirname "hello/world.tea"]
        tunit-assert-equals "hello" [file-dirname "hello/world/"]
        tunit-assert-equals "." [file-dirname "world.tea"]
        tunit-assert-equals "/" [file-dirname "/whatever"]
        tunit-assert-equals $null [file-dirname "/"]
    }

    tunit-test-error tooFewArgs {
        file-dirname
    }

    tunit-test-error tooManyArgs {
        file-dirname "1" "2"
    }

    tunit-test-error invalidArgType {
        file-dirname $null
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-extension-test {

    tunit-test dirnameOk {
        tunit-assert-equals "tea" [file-extension "hello/world.tea"]
        tunit-assert-equals "tea" [file-extension "world.tea"]
        tunit-assert-equals "" [file-extension "world."]
        tunit-assert-equals "" [file-extension "world"]
    }

    tunit-test-error tooFewArgs {
        file-extension
    }

    tunit-test-error tooManyArgs {
        file-extension "1" "2"
    }

    tunit-test-error invalidArgType {
        file-extension $null
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-copy-test {

    tunit-test copyOk {
        # TBD
    }
    
    tunit-test copyFailedNonExistentFrom {
        define home      [tea-get-system-property "user.home"]
        define srcPath   [file-join $home "THIS_DOES_NOT_EXIST"]
        define dstPath   [file-join $home "THIS_WILL_NOT_BE_CREATED"]
        define isSuccess [file-copy $srcPath $dstPath]
        
        tunit-assert [not $isSuccess]
    }

    tunit-test-error tooFewArgs {
        file-copy
    }

    tunit-test-error tooManyArgs {
        file-copy "1" "2" "3"
    }

    tunit-test-error invalidArgType {
        file-copy $null $null
    }
    
}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-exists-test {

    tunit-test existsOk {
        define home [tea-get-system-property "user.home"]
        tunit-assert [file-exists? $home]
    }

    tunit-test-error tooFewArgs {
        file-exists?
    }

    tunit-test-error tooManyArgs {
        file-exists? "1" "2"
    }

    tunit-test-error invalidArgType {
        file-exists? $null
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-is-dir-test {

    tunit-test isDirOk {
        define home [tea-get-system-property "user.home"]
        tunit-assert [file-is-dir? $home]
    }

    tunit-test-error tooFewArgs {
        file-is-dir?
    }

    tunit-test-error tooManyArgs {
        file-is-dir? "1" "2"
    }

    tunit-test-error invalidArgType {
        file-is-dir? $null
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-is-regular-test {

    tunit-test isRegularOk {
        define home [tea-get-system-property "user.home"]
        tunit-assert [not [file-is-regular? $home]]
    }

    tunit-test-error tooFewArgs {
        file-is-regular?
    }

    tunit-test-error tooManyArgs {
        file-is-regular? "1" "2"
    }

    tunit-test-error invalidArgType {
        file-is-regular? $null
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite file-join-test {
    
    define separator [java-get-value java.io.File separator]

    tunit-test joinOk {
        assertCheck () ()
        assertCheck ( ) ( "" )
        assertCheck ( "1" ) ( "1" )
        assertCheck ( "1" ) ( "" "1" )
        assertCheck ( "1" ) ( "1" "" )
        assertCheck ( "1" ) ( "" "1" "" )
        assertCheck ( "1" "2" ) ( "1" "2" )
        assertCheck ( "1" "2" ) ( "1" "" "2" )
        assertCheck ( "1" "2" "3" ) ( "1" "2" "3" )
    }

    tunit-test-error invalidArgType {
        file-join $null
    }
    
    
    define assertCheck ( expectedItemList itemList ) {
        define expected [str-join $expectedItemList $separator]
        tunit-assert-equals $expected [apply file-join $itemList]
    }

}





###########################################################################
#
# 
#
###########################################################################

tunit-testsuite mkdir-test {

    tunit-test mkdirOk {
        tunit-assert [not [file-mkdir "."]]
    }

    tunit-test-error tooFewArgs {
        file-mkdir
    }

    tunit-test-error tooManyArgs {
        file-mkdir "1" "2"
    }

    tunit-test-error invalidArgType {
        file-mkdir $null
    }

}



