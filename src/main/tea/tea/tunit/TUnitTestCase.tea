###########################################################################
#
# Copyright (c) 2011 PDM&FC, All Rights Reserved.
#
###########################################################################





#########################################################################
##
## <TeaFunction name="tunit-test"
##              arguments="name block"
##              module="tea.tunit">
## 
## <Overview>
## Declares a TUnit test case.
## </Overview>
## 
## <Parameter name="name">
## A symbol used as identifier for the test case being declared.
## </Parameter>
## 
## <Parameter name="block">
## Block of code to run when the test case is run.
## </Parameter>
## 
## <Description>
##
## <p>This function is only available inside the code block of a test
## suite (cf. <FuncRef name="tunit-testsuite" />.</p>
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

###########################################################################
#
# Creates a new test case where the test is not expected to generate
# an exception.
#
###########################################################################

global TUnitTestCase::regularTest ( name block ) {
    
    new TUnitTestCase $name $block runRegularTest
}





#########################################################################
##
## <TeaFunction name="tunit-test-error"
##              arguments="name block"
##              module="tea.tunit">
## 
## <Overview>
## Declares a TUnit test case that is supposed to throw an error.
## </Overview>
## 
## <Parameter name="name">
## A symbol used as identifier for the test case being declared.
## </Parameter>
## 
## <Parameter name="block">
## Block of code to run when the test case is run.
## </Parameter>
## 
## <Description>
##
## <p>Test cases defined with this function are expected to throw an
## error when the block of code is run. If no error is thrown then the
## test will be considered to have failed.</p>
##
## <p>This function is only available inside the code block of a test
## suite (cf. <FuncRef name="tunit-testsuite" />).</p>
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

###########################################################################
#
# Creates a new test case where the test is expected to generate an
# exception. If the test generates no exception then it will fail.
#
###########################################################################

global TUnitTestCase::errorTest ( name block ) {
    
    new TUnitTestCase $name $block runErrorTest
}





###########################################################################
#
# 
#
###########################################################################

class TUnitTestCase (

    _name
    _testBlock
    _testRunMethod
)





###########################################################################
#
# 
#
###########################################################################

method TUnitTestCase constructor ( name block testRunMethod ) {
    
    set! _name          $name
    set! _testBlock     $block
    set! _testRunMethod $testRunMethod
}





###########################################################################
#
# 
#
###########################################################################

method TUnitTestCase runTest ( testListener setup teardown ) {
    
    $this $_testRunMethod $testListener $setup $teardown
}





###########################################################################
#
# 
#
###########################################################################

method TUnitTestCase runRegularTest ( testListener setup teardown ) {
    
    define runTestBlock  [$this buildRunTestFunction $setup $teardown]
    define isErrorThrown $false
    define errorMsg      $null
    define stackTrace    $null
    define runTime       [time {
        set! isErrorThrown [catch {$runTestBlock} errorMsg stackTrace]
    }]
    
    if $isErrorThrown {
        $testListener testFailure $_name $runTime $errorMsg $stackTrace
    } {
        $testListener testSuccess $_name $runTime
    }
}





###########################################################################
#
# 
#
###########################################################################

method TUnitTestCase runErrorTest ( testListener setup teardown ) {
    
    define runTestBlock  [$this buildRunTestFunction $setup $teardown]
    define isErrorThrown $false
    define errorMsg      $null
    define stackTrace    $null
    define runTime       [time {
        set! isErrorThrown [catch {$runTestBlock} errorMsg stackTrace]
    }]
    
    if $isErrorThrown {
        $testListener testSuccess $_name $runTime
    } {
        define msg "Expected error but none was thrown"
        $testListener testFailure $_name $runTime $msg
    }
}





###########################################################################
#
# 
#
###########################################################################

method TUnitTestCase buildRunTestFunction ( setup teardown ) {
    
    lambda () {
        $setup
        exec $_testBlock
        $teardown
    }
}





#########################################################################
##
## <TeaFunction name="tunit-assert"
##              arguments="flag [message]"
##              module="tea.tunit">
## 
## <Overview>
## Asserts that the given flag is true.
## </Overview>
## 
## <Parameter name="flag">
## If false the assertion will fail and an error is thrown.
## </Parameter>
## 
## <Parameter name="message">
## The message to associate with the error, if an error is thrown.
## </Parameter>
## 
## <Description>
##
## This function is intended to be used inside TUnit tests.
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

global tunit-assert args {
    
    define argc [length $args]
    
    if { or {< $argc 1} {> $argc 2} } {
        error "Args: isTrue message"
    }
    
    define isTrue  [nth $args 0]
    define message [if {== $argc 2} {nth $args 1} "Assertion failed"]
    
    
    if $isTrue {
        # All is ok.
    } {
        error $message
    }
}





#########################################################################
##
## <TeaFunction name="tunit-assert-null"
##              arguments="object [message]"
##              module="tea.tunit">
## 
## <Overview>
## Asserts that the given object is null.
## </Overview>
## 
## <Parameter name="object">
## If not null the assertion will fail and an error is thrown.
## </Parameter>
## 
## <Parameter name="message">
## The message to associate with the error, if an error is thrown.
## </Parameter>
## 
## <Description>
##
## This function is intended to be used inside TUnit tests.
##
## <p>This function is just a shortcut to the following</p>
##
## <pre>
## tunit-assert [null? $object] $message
## </pre>
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

global tunit-assert-null args {
    
    define argc [length $args]
    
    if { or {< $argc 1} {> $argc 2} } {
        error "Args: object message"
    }
    
    define object  [nth $args 0]
    define message [if {== $argc 2} {nth $args 1} "Object is not null"]
    
    tunit-assert [null? $object] $message
}





#########################################################################
##
## <TeaFunction name="tunit-assert-not-null"
##              arguments="object [message]"
##              module="tea.tunit">
## 
## <Overview>
## Asserts that the given object is not null.
## </Overview>
## 
## <Parameter name="object">
## If null the assertion will fail and an error is thrown.
## </Parameter>
## 
## <Parameter name="message">
## The message to associate with the error, if an error is thrown.
## </Parameter>
## 
## <Description>
##
## This function is intended to be used inside TUnit tests.
##
## <p>This function is just a shortcut to the following</p>
##
## <pre>
## tunit-assert [not-null? $object] $message
## </pre>
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

global tunit-assert-not-null args {
    
    define argc [length $args]
    
    if { or {< $argc 1} {> $argc 2} } {
        error "Args: object message"
    }
    
    define object  [nth $args 0]
    define message [if {== $argc 2} {nth $args 1} "Object is not null"]
    
    tunit-assert [not-null? $object] $message
}





#########################################################################
##
## <TeaFunction name="tunit-assert-equals"
##              arguments="expectedValue actualValue"
##              module="tea.tunit">
## 
## <Overview>
## Asserts that the two given objects are equal.
## </Overview>
## 
## <Parameter name="expectedValue">
## One of the objects to compare.
## </Parameter>
## 
## <Parameter name="actualValue">
## The other object to compare.
## </Parameter>
## 
## <Description>
##
## This function is intended to be used inside TUnit tests.
##
## <p>The two received objects are compared using the <FuncRef
## name="same?" /> function.</p>
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

global tunit-assert-equals ( expectedValue actualValue ) {
    
    if { same? $expectedValue $actualValue } {
        # All ok.
    } {
        define fmtMsg "Expected \"{0}\" but got \"{1}\"."
        define msg    [str-fmt $fmtMsg $expectedValue $actualValue]
        error $msg
    }
}





#########################################################################
##
## <TeaFunction name="tunit-fail"
##              arguments="message"
##              module="tea.tunit">
## 
## <Overview>
## Makes a TUnit test case fail.
## </Overview>
## 
## <Parameter name="message">
## The message to associate with the error.
## </Parameter>
## 
## <Description>
##
## This function is intended to be used inside TUnit tests.
## 
## </Description>
##
## </TeaFunction>
##
#########################################################################

###########################################################################
#
# 
#
###########################################################################

global tunit-fail ( msg ) {
    
    error $msg
}





###########################################################################
#
# 
#
###########################################################################

