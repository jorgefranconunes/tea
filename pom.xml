<?xml version="1.0" encoding="UTF-8"?>

<!--

Copyright (c) 2011-2012 PDMFC, All Rights Reserved.


Tea project main Maven POM file.

NOTE: Use of Maven to perform Tea builds is currently only intended as
a proof-of-concept. The official build procedure will always be the
one described at "00README-developers.txt".

-->

<project
   xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                       http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.pdmfc.tea</groupId>

  <artifactId>tea</artifactId>

  <!-- This must be kept sinchronyzed with
       "config/tea-core.conf". (For now...) -->
  <version>4.0.0-beta07</version>

  <packaging>jar</packaging>





  <properties>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- By default unit tests (JUnit+TUnit) are not run. -->
    <skipTests>true</skipTests>

    <!-- Used bellow and also within some properties files that get
         filtered. -->
    <BUILD_VERSION>${project.version}</BUILD_VERSION>

    <!-- The following are used when generating Teadoc
         documentation. -->
    <tea.teadoc.header><![CDATA[Tea ${BUILD_VERSION} Reference Documentation<b>&copy; 2012 <a href="http://www.pdmfc.com">PDM&amp;FC</a>]]></tea.teadoc.header>
    <tea.teadoc.footer>${tea.teadoc.header}</tea.teadoc.footer>
    <tea.teadoc.bottom><![CDATA[<font size="-1"><a href="mailto:info@pdmfc.com">Report a bug or request new features</a></font><br /><font size="-1">&copy; 2012</font> <a href="http://www.pdmfc.com"><img align="absmiddle" border="0" src="LogoSmallPdmfc.png"></a>]]></tea.teadoc.bottom>
  <tea.teadoc.doctitle>Tea ${BUILD_VERSION} Reference Documentation</tea.teadoc.doctitle>
  <tea.teadoc.windowtitle>${tea.teadoc.doctitle}</tea.teadoc.windowtitle>

  <!-- The following are used when generating Javadoc
       documentation. -->
  <tea.javadoc.header><![CDATA[<b>Tea Java Runtime API</b><br /><b>Version ${project.version}</b>]]></tea.javadoc.header>
  <tea.javadoc.bottom><![CDATA[<font size="-1">&copy; 2012 <a href="http://www.pdmfc.com" target="_blank">PDMFC</a>, All Rights Reserved.</font>]]></tea.javadoc.bottom>
  <tea.javadoc.doctitle>${project.name} ${project.version}</tea.javadoc.doctitle>
  <tea.javadoc.windowtitle>${tea.javadoc.doctitle}</tea.javadoc.windowtitle>

  </properties>





  <!-- Define the versions of all dependencies used in all
       modules. This way modules will not need to know or to refer to
       the dependency version. -->

  <dependencyManagement>
    <dependencies>
        
      <!-- JUnit -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.9</version>
      </dependency>

      <dependency>
        <groupId>net.sourceforge.cobertura</groupId>
        <artifactId>cobertura</artifactId>
        <version>1.9.4.1</version>
      </dependency>

    </dependencies>
  </dependencyManagement>





  <!-- List of dependencies for this module. -->

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Required for running Cobertura instrumented classes with
         exec-maven-plugin. This Cobertura version must match the
         Cobertura version used by the cobertura-maven-plugin. This is
         an horrendous hack, I know... -->
    <dependency>
      <groupId>net.sourceforge.cobertura</groupId>
      <artifactId>cobertura</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>





  <!-- -->

  <build>

    <defaultGoal>package</defaultGoal>


    <!-- Plugins configuration that applies to all POMs inheriting
         from this POM. -->
    <pluginManagement>

      <plugins>
      

        <!-- Compiler configuration. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
            <showWarnings>true</showWarnings>
            <compilerArgument>-Xlint</compilerArgument>
            <compilerArgument>-Xlint:-serial</compilerArgument>
          </configuration>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
        </plugin>


        <!-- JUnit tests configuration -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>
          <configuration>
            <!-- Show exception stack traces of tests in stdout. -->
            <useFile>false</useFile>
            <skipTests>${skipTests}</skipTests>
          </configuration>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.0</version>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.3</version>
        </plugin>


        <!-- Used for executing Tea tools. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.2.1</version>
        </plugin>
      
  
      </plugins>

    </pluginManagement>





    <!--  -->
    <plugins>


      <!-- Add the Tea library source files to the resources included
           in the JAR. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-tea-lib-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/classes/lib/tea-${project.version}</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/main/tea</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>


      <!-- Include the appropriate manifest in the final JAR. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.pdmfc.tea.apps.STeaLauncher</mainClass>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
        </configuration>
      </plugin>


      <!-- Copy the final JAR to the location expected by the Tea
           command line tools. (How low can you go?... All this just
           to copy a file... Many kittens have died to bring us this
           information...) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-final-jar</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy
                   file="target/${project.build.finalName}.jar"
                   todir="lib/jars"
                   verbose="true" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- Remove the final JAR also from where it was copied to
           during assembly. -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>lib/jars</directory>
              <includes>
                <include>**/*.jar</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc/teadoc</directory>
            </fileset>
            <fileset>
              <directory>doc/javadoc</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>


    </plugins>




    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>


  </build>





  <profiles>


    <!-- Profile used to setup the working area as an
         installation. This is required for running the "teadoc" tool.
         tests. This profile is activated when the "teaSetup" system
         property has value "true". This is tipically only used when
         the build is run in a CI environment. -->
    <profile>
      <id>tea-perform-setup</id>
      <activation>
        <property>
          <name>teaSetup</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>

          <!--  Set up the working area as an installation. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>tea-setup</id>
                <phase>initialize</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/bin/setup</executable>
                  <arguments>
                    <argument>--java-home=${java.home}</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>


    <!-- Profile used to run TUnit tests. This profile is activated
         when the "skipTests" system property has value "false". The
         same system property (skipTests) is also used by the
         maven-surefire-plugin for the same purpose. -->
    <profile>
      <id>tea-run-tunit-tests</id>
      <activation>
        <property>
          <name>skipTests</name>
          <value>false</value>
        </property>
      </activation>
      <build>
        <plugins>

          <!-- Run the TUnit tests. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run-tunit-tests</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <classpathScope>test</classpathScope>
                  <executable>${java.home}/bin/java</executable>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath />
                    <argument>com.pdmfc.tea.tools.runner.STeaRunner</argument>
                    <argument>--script=resource:/lib/tea-${project.version}/tea/tools/tunit/tunit-main.tea</argument>
                    <argument>--</argument>
                    <argument>surefireReport</argument>
                    <argument>--dir=${basedir}/src/test/tea</argument>
                    <argument>--report-dir=${basedir}/target/surefire-reports</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>


    <!-- Profile used to create Teadoc documentation. This profile is
         activated when the "teaTeadoc" system property has value
         "true". This is tipically used when building a release. -->
    <profile>
      <id>tea-run-teadoc</id>
      <activation>
        <property>
          <name>teaTeadoc</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>

          <!-- Generate Teadoc documentation. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run-teadoc</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <classpathScope>test</classpathScope>
                  <executable>${basedir}/devtools/bin/build-teadoc</executable>
                  <arguments>
                    <argument>--header=${tea.teadoc.header}</argument>
                    <argument>--footer=${tea.teadoc.footer}</argument>
                    <argument>--bottom=${tea.teadoc.bottom}</argument>
                    <argument>--doc-title=${tea.teadoc.doctitle}</argument>
                    <argument>--window-title=${tea.teadoc.windowtitle}</argument>
                    <argument>--path-list=${basedir}/src/main</argument>
                    <argument>--output-dir=${basedir}/doc/teadoc</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>


    <!-- Profile used to create Javadoc documentation. This profile is
         activated when the "teaJavadoc" system property has value
         "true". This is tipically used when building a release. -->
    <profile>
      <id>tea-run-javadoc</id>
      <activation>
        <property>
          <name>teaJavadoc</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>

          <!-- Generate Javadoc documentation. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>run-javadoc</id>
                <phase>package</phase>
                <goals>
                  <goal>javadoc</goal>
                </goals>
                <configuration>
                  <reportOutputDirectory>${basedir}/doc</reportOutputDirectory>
                  <destDir>javadoc</destDir>
                  <doctitle>${tea.javadoc.doctitle}</doctitle>
                  <windowtitle>${tea.javadoc.windowtitle}</windowtitle>
                  <header>${tea.javadoc.header}</header>
                  <bottom>${tea.javadoc.bottom}</bottom>
                  <author>true</author>
                  <splitindex>true</splitindex>
                  <version>true</version>
                  <use>true</use>
                  <quiet>true</quiet>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>


    <!-- Profile used to create a Tea release bundle. This profile is
         activated when the "teaRelease" system property has value
         "true". This is tipically used when building a release. -->
    <profile>
      <id>tea-create-release-bundle</id>
      <activation>
        <property>
          <name>teaRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>

          <!-- Create an assembly for the Tea release bundle.. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>create-release-bundle</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/bundle.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>


  </profiles>





  <!-- Report configuration. -->

  <reporting>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>scm</report>
              <report>issue-tracking</report>
              <report>cim</report>
              <report>dependencies</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
          <doctitle>${tea.javadoc.doctitle}</doctitle>
          <windowtitle>${tea.javadoc.windowtitle}</windowtitle>
          <header>${tea.javadoc.header}</header>
          <bottom>${tea.javadoc.bottom}</bottom>
          <author>true</author>
          <splitindex>true</splitindex>
          <version>true</version>
          <use>true</use>
          <quiet>true</quiet>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- The JXR reporting plugin must come before the PMD and
           Surefire reporting plugins. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.12</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.7.1</version>
        <configuration>
          <targetJdk>1.6</targetJdk>
          <verbose>true</verbose>
          <rulesets>
            <ruleset>src/main/config/pmd/pmd-rulesets.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <configLocation>src/main/config/checkstyle/checkstyle.xml</configLocation>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- Make sure the the maven-surefire-plugin runs the tests in a
           distinct JVM, otherwise Cobertura will not use the
           instrumented classes. See
           http://mojo.codehaus.org/cobertura-maven-plugin/ for
           documentation. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>

      <!-- See http://mojo.codehaus.org/findbugs-maven-plugin/ for
           documentation. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.4.0</version>
        <configuration>
          <effort>Max</effort>
          <xmlOutput>true</xmlOutput>
          <xmlOutputDirectory>target/site</xmlOutputDirectory>
        </configuration>
      </plugin>

    </plugins>

  </reporting>





  <!-- More project information. -->

  <name>Tea</name>

  <description>The Tea scripting language.</description>

  <url>https://redmine.pdmfc.com/projects/tea/wiki</url>

  <inceptionYear>1997</inceptionYear>

  <organization>
    <name>PDMFC</name>
    <url>http://www.pdmfc.com</url>
  </organization>

  <issueManagement>
    <system>Redmine</system>
    <url>https://redmine.pdmfc.com/projects/tea/issues</url>
  </issueManagement>

  <ciManagement>
    <system>jenkins</system>
    <url>https://ci.pdmfc.com/jenkins/job/Tea/</url>
  </ciManagement>

  <scm>
    <developerConnection>scm:svn:svn+ssh://ssh.pdmfc.com/opt/svnroot/tea/trunk</developerConnection>
    <tag>HEAD</tag>
    <url>https://redmine.pdmfc.com/projects/tea/repository/show/trunk</url>
  </scm>

  <mailingLists>
    <mailingList>
      <name>Tea developers</name>
      <post>tea.dev@pdmfc.com</post>
      <archive>https://mailman.pdmfc.com/pipermail/tea.dev/</archive>
    </mailingList>
  </mailingLists>

  <developers>
    <developer>
      <id>jfn</id>
      <name>Jorge Nunes</name>
      <email>jorge.nunes@pdmfc.com</email>
      <organization>PDMFC</organization>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>pcorreia</id>
      <name>Paulo Correia</name>
      <email>paulo.correia@pdmfc.com</email>
      <organization>PDMFC</organization>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>jpsl</id>
      <name>João Luis</name>
      <email>joao.luis@pdmfc.com</email>
      <organization>PDMFC</organization>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>


</project>

