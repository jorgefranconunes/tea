#!/bin/bash
###########################################################################
#
# Copyright (c) 2008 PDM&FC, All Rights Reserved.
#
###########################################################################

###########################################################################
#
# $Id$
#
#
# Configures the development tree for performing builds.
#
###########################################################################

_scriptDir=$(dirname $0)
_scriptName=$(basename $0)

_teaBaseDir=$(cd $_scriptDir/..; pwd)

#
# Makes utility functions available.
#
source ${_teaBaseDir}/bin/tea-utils





CONF_ANT_BUNDLE=${_teaBaseDir}/third-party/apache-ant-1.8.0-bin.tar.bz2
CONF_ANT_TOOL=${_teaBaseDir}/devtools/apache-ant-1.8.0/bin/ant

CONF_ANTC_BUNDLE=${_teaBaseDir}/third-party/ant-contrib-1.0b3-bin.zip
CONF_ANTC_JAR=ant-contrib/ant-contrib-1.0b3.jar

CONF_JUNIT_BUNDLE=${_teaBaseDir}/third-party/junit4.8.2.zip
CONF_JUNIT_JAR=junit4.8.2/junit-4.8.2.jar

#
# List of JARs in the "lib" directory used during compilation.
#
_additionalBuildJars="
"





###########################################################################
#
# 
#
###########################################################################

function readBuildConfig () {

    local buildConf=${_teaBaseDir}/build.conf

    if [ ! -f $buildConf ] ; then
	teaError "Build config file \"$buildConf\" is missing."
    fi

    # Set default values for some parameters.
    BUILD_PATH_SEPARATOR=$(teaPathSeparator)

    source $buildConf

    local requiredParams="
        BUILD_JAVAC
        BUILD_JAR
        BUILD_JAVADOC
        BUILD_PATH_SEPARATOR
"

    for paramName in $requiredParams ; do
	local paramValue=${!paramName}

	if [ -z "$paramValue" ] ; then
	    teaError "Parameter \"$paramName\" not defined on \"$buildConf\""
	fi
    done

    # Fill the list of JARs to use during compilation.

    local sep=$(teaPathSeparator)
    local makefileClasspath=

    for jar in $_additionalBuildJars ; do
        local jarPath=${_teaBaseDir}/lib/${jar}

        if [ -z "$makefileClasspath" ] ; then
            makefileClasspath=$jarPath
        else
            makefileClasspath=${makefileClasspath}${sep}${path}
        fi
    done

    # And assign values to aditional config parameters.

    source ${_teaBaseDir}/config/tea-core.conf

    BUILD_BASE_DIR=$_teaBaseDir
    BUILD_VERSION=$TEA_VERSION
    BUILD_MAKEFILE_CLASSPATH=$makefileClasspath
}





###########################################################################
#
# 
#
###########################################################################

function createMakefileConfig () {

    local templateFile=${_teaBaseDir}/config/Makefile.conf.template
    local resultFile=${_teaBaseDir}/Makefile.conf

    teaParseTemplate $templateFile > $resultFile
}





###########################################################################
#
# Installs Ant if BUILD_ANT is not defined on "build.conf"
#
###########################################################################

function antSetup () {

    if [ "$BUILD_ANT" == "" ] ; then
        local devtoolsDir=${_teaBaseDir}/devtools

        mkdir -p $devtoolsDir

        (cd $devtoolsDir ; tar xfj $CONF_ANT_BUNDLE)

        BUILD_ANT=$CONF_ANT_TOOL
    fi

    local antcJarDir=${_teaBaseDir}/lib/jars

    unzip -q -o -j $CONF_ANTC_BUNDLE $CONF_ANTC_JAR -d $antcJarDir
}





###########################################################################
#
# 
#
###########################################################################

function junitSetup () {

    local jarDir=${_teaBaseDir}/lib/jars

    unzip -q -o -j $CONF_JUNIT_BUNDLE $CONF_JUNIT_JAR -d $jarDir
}





###########################################################################
#
# The main script.
#
###########################################################################

readBuildConfig
antSetup
junitSetup
createMakefileConfig





###########################################################################
#
# 
#
###########################################################################

