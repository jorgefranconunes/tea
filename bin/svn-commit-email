#!/bin/bash
###########################################################################
#
# Copyright (c) 2009 PDM&FC, All Rights Reserved.
#
###########################################################################

###########################################################################
#
# $Id$
#
#
# Sends an email with data on a Subversion commit.
#
#
# Revisions:
#
# 2009/03/11 Created. (jfn)
#
###########################################################################

_scriptDir=$(dirname $0)
_scriptName=$(basename $0)





_revision=""
_repository=""
_toAddress=""
_fromAddress=""
_projectId=""





###########################################################################
#
# Displays a message to stderr and exits the process.
#
# Arguments:
#
# 1. The message to be displayed.
#
###########################################################################

myError () {

    echo "***" $1 >&2
    exit 1
}





###########################################################################
#
# Displays an help message describing the configuration options.
#
###########################################################################

displayHelp () {

    displayHeader

    cat <<EOF
Sends an email with data on a Subversion commit.

Available options:
--revision=NUMBER
--repository=PATH
--email=ADDRESS
--from-address=ADDRESS
--project=STRING
EOF
}





###########################################################################
#
# 
#
###########################################################################

parseCliOptions () {

    for option in "$@" ; do
	case $option in
	    --revision=* )
		_revision=$(expr "$option" : '--revision=\(.*\)')
		;;
	    --repository=* )
		_repository=$(expr "$option" : '--repository=\(.*\)')
		;;
	    --email=* )
		_toAddress=$(expr "$option" : '--email=\(.*\)')
		;;
	    --from-address=* )
		_fromAddress=$(expr "$option" : '--from-address=\(.*\)')
		;;
	    --help )
		displayHelp
		exit 0
		;;
	    --*=* )
		option=$(expr $option : '\(--.*\)=.*')
		myError "$option : unrecognized option. Use --help to see options."
		;;
	    * )
		myError "$option : unrecognized option. Use --help to see options."
		exit 1
		;;
	esac
    done

    if [ -z "$_revision" ] ; then
	myError "Missing --revision option. Use --help for details."
    fi

    if [ -z "$_repository" ] ; then
	myError "Missing --repository option. Use --help for details."
    fi

    if [ -z "$_toAddress" ] ; then
	myError "Missing --email option. Use --help for details."
    fi

    if [ -z "$_fromAddress" ] ; then
	myError "Missing --from-address option. Use --help for details."
    fi

    _projectId=$(basename $_repository)
}





#########################################################################
#
# 
#
#########################################################################

sendEmail () {

    local revision=$1
    local repository=$2

    local user=$(svnlook author -r $revision $repository)
    local date=$(svnlook date -r $revision $repository)
    local comment=$(svnlook log -r $revision $repository)
    local fileList=$(svnlook changed -r $revision --copy-info $repository)
    local changes=$(svnlook diff -r $revision $repository)

    local emailMsg=/tmp/${_scriptName}.$$

    cat > $emailMsg <<EOF
To: $_toAddress
Subject: $_projectId - Subversion commit

Subversion Commit

*** Project : $_projectId
*** User    : $user
*** Date    : $date


*** Comment ***
$comment


*** Affected Files ***
$fileList


*** Changes ***
$changes

EOF

    cat $emailMsg

    rm -f $emailMsg
}





#########################################################################
#
# The main script.
#
#########################################################################

parseCliOptions "$@"
sendEmail $_revision $_repository





#########################################################################
#
# 
#
#########################################################################

